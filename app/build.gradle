/*
 * Copyright (c) 2016. Saiy Ltd. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
plugins {
    id 'com.android.application'
    id 'com.google.protobuf'
    id 'com.google.gms.google-services'
}

android {
    namespace 'ai.saiy.android'
    //noinspection GradleDependency: For android.service.voice.AlwaysOnHotwordDetector
    compileSdk 30

    defaultConfig {
        applicationId "ai.saiy.android"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 3
        versionName "1.0.3"
        // Required when setting minSdkVersion to 20 or lower
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true // <- this flag is required
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental true
    }

    flavorDimensions 'tier'
    productFlavors {

        x86 {
            ndk {
                abiFilter "x86"
            }
        }
        x86_64 {
            ndk {
                abiFilter "x86_64"
            }
        }
        arm {
            ndk {
                abiFilters "armeabi"
            }
        }
        arm7 {
            ndk {
                abiFilters "armeabi-v7a"
            }
        }
        arm8 {
            ndk {
                abiFilters "arm64-v8a"
            }
        }
        mips {
            ndk {
                abiFilter "mips"
            }
        }
        mips_64 {
            ndk {
                abiFilter "mips64"
            }
        }

        dev {
            dimension 'tier'
        }

        prod {
            dimension 'tier'
            minSdkVersion 16
        }
    }

    buildTypes {

        release {
            ndk {
                abiFilters 'armeabi-v7a', 'armeabi', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            ndk {
                abiFilters 'armeabi-v7a', 'armeabi', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
    }
}

configurations {
    implementation.exclude group: "org.apache.httpcomponents", module: "httpclient"
}

dependencies {
    implementation fileTree(include: ['*.aar', '*.jar', '*.so'], dir: 'libs')
    implementation libs.multidex
    coreLibraryDesugaring libs.desugar.jdk.libs

    implementation libs.material
    implementation libs.appcompat
    implementation(libs.activity) {
        exclude group: 'androidx.activity', module: 'activity-ktx'
    }
    implementation libs.annotation
    implementation libs.browser
    implementation libs.cardview
    implementation libs.constraintlayout
    implementation (libs.core) {
        exclude group: 'androidx.core', module: 'core-ktx'
    }
    implementation libs.documentfile
    implementation libs.drawerlayout
    implementation(libs.fragment) {
        exclude group: 'androidx.fragment', module: 'fragment-ktx'
    }
    implementation(libs.lifecycle.runtime) {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-runtime-ktx'
    }
    implementation(libs.lifecycle.livedata) {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-livedata-core-ktx'
    }
    implementation(libs.lifecycle.viewmodel) {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
    }
    implementation libs.lifecycle.viewmodel.savedstate
    annotationProcessor libs.common.java8
    implementation libs.recyclerview
    implementation libs.print
    implementation libs.transition

    implementation(libs.google.google.api.services.translate) {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.google.guava'
    }
    implementation libs.play.services.location
    implementation libs.play.services.auth
    implementation libs.speechkit
    implementation libs.guava
    implementation libs.gson
    implementation libs.google.http.client.gson
    implementation libs.speechrecognition
    implementation libs.commons.lang3
    implementation libs.commons.codec
    implementation libs.simmetrics.core
    implementation libs.commons.collections4
    implementation platform(libs.libraries.bom)
    // https://github.com/dialogflow/dialogflow-android-client
    // https://github.com/googleapis/google-cloud-java/tree/main/java-dialogflow
    implementation (libs.cloud.dialogflow) {
        exclude group: 'io.grpc', module: 'grpc-protobuf'
        exclude group: 'com.google.protobuf', module: 'protobuf-java-lite'
//        exclude group: 'com.google.protobuf', module: 'protobuf-java'
//        exclude group: 'com.google.protobuf', module: 'protobuf-java-util'
    }
    // Add the dependency for the Firebase Authentication library
    implementation libs.firebase.auth
    implementation libs.firebase.functions
    implementation libs.firebase.messaging
    implementation libs.commons.io
    // https://github.com/TooTallNate/Java-WebSocket
    implementation libs.java.web.socket
    implementation libs.licensesdialog
    implementation(libs.simple.xml) {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    implementation(libs.grpc.okhttp) {
        exclude module: 'jsr305'
    }
    implementation(libs.grpc.protobuf) {
        exclude module: 'jsr305'
    }
    implementation(libs.grpc.stub) {
        exclude module: 'jsr305'
    }
    implementation(libs.grpc.auth) {
        exclude module: 'jsr305'
    }
    implementation(libs.javax.annotation.api) {
        exclude module: 'annotation'
    }
    implementation(libs.com.google.auth.google.auth.library.oauth2.http3) {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.guava'
        exclude module: 'jsr305'
        exclude module: 'httpclient'
    }
    implementation (libs.volley)
    // https://github.com/cmusphinx/pocketsphinx-android
    implementation project(':pocketsphinx-android-5prealpha-nolib')
    testImplementation libs.junit
    androidTestImplementation libs.junit
    androidTestImplementation libs.ext.junit
}

// https://github.com/google/protobuf-gradle-plugin
// https://github.com/grpc/grpc-java
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.63.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }
}

ant.importBuild('assets.xml')
preBuild.dependsOn(list, checksum)
clean.dependsOn(clean_assets)
